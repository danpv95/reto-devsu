services:
  # 1) Base de datos
  postgres:
    image: postgres:17
    container_name: devsu-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports: [ "6543:5432" ]
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2) micro-servicio clientes
  cliente-persona-service:
    build: ../cliente-persona-service
    container_name: cliente-service
    environment:
      - SPRING_PROFILES_ACTIVE=qa
    depends_on:
      postgres:
        condition: service_healthy
    ports: [ "8081:8081" ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 60s

  # 3) micro-servicio movimientos
  cuenta-movimiento-service:
    build: ../cuenta-movimiento-service
    container_name: movimiento-service
    environment:
      - SPRING_PROFILES_ACTIVE=qa
      - CLIENTE_SERVICE_URL=http://cliente-persona-service:8081/api/clientes
    depends_on:
      postgres:
        condition: service_healthy
      cliente-persona-service:
        condition: service_healthy
    ports: [ "8082:8082" ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 60s

volumes:
  postgres_data:
